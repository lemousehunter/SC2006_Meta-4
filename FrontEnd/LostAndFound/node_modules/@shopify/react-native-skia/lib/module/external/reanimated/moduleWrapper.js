var _Reanimated, _Reanimated2, _Reanimated3, _Reanimated4;

import { useMemo } from "react";
// eslint-disable-next-line @typescript-eslint/no-explicit-any
let Reanimated;

try {
  Reanimated = require("react-native-reanimated");
} catch (e) {// Ignore
}

export const HAS_REANIMATED = !!Reanimated;

function throwOnMissingReanimated() {
  throw new Error("Reanimated was not found, make sure react-native-reanimated package is installed if you want to use \
    react-naitve-skia's integration layer API.");
}

let ReanimatedVersionTested = false;
export function throwOnIncompatibleReanimatedVersion() {
  if (ReanimatedVersionTested) {
    // we avoid testing version more than once as it won't change and we throw
    // an error when version is incompatible
    return;
  }

  ReanimatedVersionTested = true;

  const reanimatedVersion = // eslint-disable-next-line import/extensions
  require("react-native-reanimated/package.json").version; // The first compatible version is 3.0.0 but we need to exclude 3.0.0 pre-releases
  // as they have limited support for the used API.


  if (!reanimatedVersion || reanimatedVersion < "3.0.0" || reanimatedVersion.includes("3.0.0-")) {
    throw new Error(`Reanimated version ${reanimatedVersion} is not supported, please upgrade to 3.0.0 or newer.`);
  }
}
export const useSharedValue = ((_Reanimated = Reanimated) === null || _Reanimated === void 0 ? void 0 : _Reanimated.useSharedValue) || (value => useMemo(() => ({
  value
}), [value]));
export const startMapper = ((_Reanimated2 = Reanimated) === null || _Reanimated2 === void 0 ? void 0 : _Reanimated2.startMapper) || throwOnMissingReanimated;
export const stopMapper = ((_Reanimated3 = Reanimated) === null || _Reanimated3 === void 0 ? void 0 : _Reanimated3.stopMapper) || throwOnMissingReanimated;
export const runOnJS = ((_Reanimated4 = Reanimated) === null || _Reanimated4 === void 0 ? void 0 : _Reanimated4.runOnJS) || throwOnMissingReanimated;
export const isSharedValue = value => {
  if (!Reanimated) {
    throwOnMissingReanimated();
  }

  return !!value && Reanimated.isSharedValue(value);
};
//# sourceMappingURL=moduleWrapper.js.map